import re

def mask_text_numbers(doc):
    """
    Применяет маскировку к тексту, заменяя числительные специальными плейсхолдерами.

    Args:
        doc: Объект, содержащий анализируемый текст.

    Returns:
        tuple: Возвращает кортеж, содержащий словарь с плейсхолдерами и маскированным текстом.
    """
    numbers = {
        'ноль', 'один', 'одна', 'одну', 'два', 'двe', 'три', 'четыре', 'пять',
        'шесть', 'семь', 'восемь', 'девять', 'десять', 'одиннадцать', 'двенадцать',
        'тринадцать', 'четырнадцать', 'пятнадцать', 'шестнадцать', 'семнадцать',
        'восемнадцать', 'девятнадцать', 'двадцать', 'тридцать', 'сорок', 'пятьдесят',
        'шестьдесят', 'семьдесят', 'восемьдесят', 'девяносто', 'сто', 'двести',
        'триста', 'четыреста', 'пятьсот', 'шестьсот', 'семьсот', 'восемьсот',
        'девятьсот', 'тысяча', 'тысячи', 'тысяч', 'тысячу', 'миллион', 'миллиона',
        'миллионов', 'миллиард', 'миллиарда', 'миллиардов', 'трилион', 'трилиона',
        'трилионов'
    }
    masks = {}
    masked_text = doc
    mask_index = 1
    pattern = r'\b(?:{})\b'.format('|'.join(numbers))

    # Найдем и заменим последовательности числительных на маски
    while True:
        match = re.search(rf'({pattern}(?:\s+{pattern})*)', masked_text)
        if not match:
            break
        number_sequence = match.group(0)
        mask = f"{{TEXT_NUMBER_{mask_index}}}"
        masks[mask] = number_sequence
        masked_text = masked_text.replace(number_sequence, mask, 1)
        mask_index += 1

    return masks, masked_text
